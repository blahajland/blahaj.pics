name: Build and Release

on:
  push:
    branches: [ '*' ]
    tags: [ '*' ]
  pull_request:
    branches: [ '*' ]

env:
  POSTGRES_DB: lutim_db
  POSTGRES_USER: lutim
  POSTGRES_PASSWORD: lutim_pwd

jobs:
  create_release:
    if: startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Generate changelog
        id: changelog
        run: |
          PREVIOUS_TAG=$(git describe --tags --abbrev=0 HEAD^ 2>/dev/null || echo '')
          if [ -n "$PREVIOUS_TAG" ]; then
            echo "changelog<<EOF" >> $GITHUB_OUTPUT
            git log --pretty=format:'* %s' $PREVIOUS_TAG..HEAD >> $GITHUB_OUTPUT
            echo "EOF" >> $GITHUB_OUTPUT
          else
            echo "changelog=Initial release" >> $GITHUB_OUTPUT
          fi
      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          body: ${{ steps.changelog.outputs.changelog }}
          draft: false
          prerelease: false

  podcheck:
    runs-on: ubuntu-latest
    container: hatsoftwares/lutim-test-ci:latest
    steps:
      - uses: actions/checkout@v4
      - name: Run podcheck
        run: make podcheck

  carton:
    runs-on: ubuntu-latest
    container: hatsoftwares/lutim-test-ci:latest
    steps:
      - uses: actions/checkout@v4
      - name: Install dependencies
        run: |
          cpanm -l local Devel::Cover~1.29
          carton install --deployment --without=sqlite --without=postgresql --without=minion --without=cache --without=memcached
      - name: Prepare artifacts
        run: |
          cp -r local local-safe || exit 1
          find local-safe -type f -name "*.3pm" -exec rename 's/:/-/g' {} + || echo "No .3pm files found to rename"
      - name: Upload carton artifacts
        uses: actions/upload-artifact@v4
        with:
          name: carton-deps
          path: local-safe/
          if-no-files-found: error

  carton_sqlite:
    needs: carton
    runs-on: ubuntu-latest
    container: hatsoftwares/lutim-test-ci:latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/download-artifact@v4
        with:
          name: carton-deps
          path: local/
      - name: Restore original paths
        run: |
          find local -type f -name "*.3pm" -exec rename 's/-/:/g' {} + || echo "No .3pm files found to rename"
      - name: Install SQLite dependencies
        run: carton install --deployment --without=postgresql --without=minion --without=cache --without=memcached
      - name: Prepare artifacts
        run: |
          cp -r local local-safe || exit 1
          find local-safe -type f -name "*.3pm" -exec rename 's/:/-/g' {} + || echo "No .3pm files found to rename"
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: sqlite-deps
          path: local-safe/
          if-no-files-found: error

  carton_postgresql:
    needs: carton
    runs-on: ubuntu-latest
    container: hatsoftwares/lutim-test-ci:latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/download-artifact@v4
        with:
          name: carton-deps
          path: local/
      - name: Restore original paths
        run: |
          find local -type f -name "*.3pm" -exec rename 's/-/:/g' {} + || echo "No .3pm files found to rename"
      - name: Install PostgreSQL dependencies
        run: carton install --deployment --without=sqlite --without=minion --without=cache --without=memcached
      - name: Prepare artifacts
        run: |
          cp -r local local-safe || exit 1
          find local-safe -type f -name "*.3pm" -exec rename 's/:/-/g' {} + || echo "No .3pm files found to rename"
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: pg-deps
          path: local-safe/
          if-no-files-found: error

  sqlite_tests:
    needs: carton_sqlite
    runs-on: ubuntu-latest
    container: hatsoftwares/lutim-test-ci:latest
    strategy:
      matrix:
        config: [sqlite1, sqlite2, sqlite3]
    services:
      postgres:
        image: postgres:9.6
        env:
          POSTGRES_DB: ${{ env.POSTGRES_DB }}
          POSTGRES_USER: ${{ env.POSTGRES_USER }}
          POSTGRES_PASSWORD: ${{ env.POSTGRES_PASSWORD }}
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
      - uses: actions/checkout@v4
      - uses: actions/download-artifact@v4
        with:
          name: sqlite-deps
          path: local/
      - name: Restore original paths
        run: |
          find local -type f -name "*.3pm" -exec rename 's/-/:/g' {} + || echo "No .3pm files found to rename"
      - name: Setup for ${{ matrix.config }}
        run: |
          rm -f *.db
          if [ "${{ matrix.config }}" = "sqlite3" ]; then
            carton install --deployment --without=cache --without=memcached
            export PGPASSWORD=${{ env.POSTGRES_PASSWORD }}
            psql -h postgres -U ${{ env.POSTGRES_USER }} ${{ env.POSTGRES_DB }} -c 'CREATE DATABASE lutim_minion WITH OWNER lutim;' || {
              echo "Failed to create lutim_minion database"
              exit 1
            }
          elif [ "${{ matrix.config }}" = "sqlite2" ]; then
            carton install --deployment --without=postgresql --without=cache --without=memcached
          else
            carton install --deployment --without=postgresql --without=minion --without=cache --without=memcached
          fi
      - name: Run tests
        run: |
          mkdir -p artifacts
          for target in test watch cleanbdd cleanfiles stats test-junit-output; do
            MOJO_CONFIG=t/${{ matrix.config }}.conf make $target || exit 1
          done
      - name: Prepare test results
        run: |
          cp tap.xml artifacts/ || exit 1
          cp -r cover_db artifacts/ || exit 1
      - name: Upload test results
        uses: actions/upload-artifact@v4
        with:
          name: test-results-${{ matrix.config }}
          path: artifacts/
          if-no-files-found: error

  postgresql_tests:
    needs: carton_postgresql
    runs-on: ubuntu-latest
    container: hatsoftwares/lutim-test-ci:latest
    strategy:
      matrix:
        config: [postgresql1, postgresql2, postgresql3]
    services:
      postgres:
        image: postgres:9.6
        env:
          POSTGRES_DB: ${{ env.POSTGRES_DB }}
          POSTGRES_USER: ${{ env.POSTGRES_USER }}
          POSTGRES_PASSWORD: ${{ env.POSTGRES_PASSWORD }}
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
      - uses: actions/checkout@v4
      - uses: actions/download-artifact@v4
        with:
          name: pg-deps
          path: local/
      - name: Restore original paths
        run: |
          find local -type f -name "*.3pm" -exec rename 's/-/:/g' {} + || echo "No .3pm files found to rename"
      - name: Setup for ${{ matrix.config }}
        run: |
          rm -f *.db
          if [ "${{ matrix.config }}" = "postgresql3" ]; then
            carton install --deployment --without=sqlite --without=cache --without=memcached
            export PGPASSWORD=${{ env.POSTGRES_PASSWORD }}
            psql -h postgres -U ${{ env.POSTGRES_USER }} ${{ env.POSTGRES_DB }} -c 'CREATE DATABASE lutim_minion WITH OWNER lutim;' || {
              echo "Failed to create lutim_minion database"
              exit 1
            }
          elif [ "${{ matrix.config }}" = "postgresql2" ]; then
            carton install --deployment --without=cache --without=memcached
          else
            carton install --deployment --without=sqlite --without=minion --without=cache --without=memcached
          fi
      - name: Run tests
        run: |
          mkdir -p artifacts
          for target in test watch cleanbdd cleanfiles stats test-junit-output; do
            MOJO_CONFIG=t/${{ matrix.config }}.conf make $target || exit 1
          done
      - name: Prepare test results
        run: |
          cp tap.xml artifacts/ || exit 1
          cp -r cover_db artifacts/ || exit 1
      - name: Upload test results
        uses: actions/upload-artifact@v4
        with:
          name: test-results-${{ matrix.config }}
          path: artifacts/
          if-no-files-found: error

  coverage:
    needs: [sqlite_tests, postgresql_tests]
    runs-on: ubuntu-latest
    container: hatsoftwares/lutim-test-ci:latest
    steps:
      - uses: actions/checkout@v4
      - name: Create artifacts directory
        run: mkdir -p artifacts
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts/
      - name: Generate coverage report
        run: |
          mkdir -p artifacts/cover_db
          cp -r artifacts/test-results-*/cover_db/* artifacts/cover_db/ || exit 1
          make cover
      - name: Upload coverage results
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: artifacts/cover_db/
          if-no-files-found: error